﻿
@inherits LayoutComponentBase

<BlazorBootstrapLayout StickyHeader="true">
    <HeaderSection>
        <ThemeSwitcher Class="ps-3 ps-lg-2" Position="DropdownMenuPosition.End" />
    </HeaderSection>

@*     <SidebarSection>
        @if (showSidebar)
        {
            <Sidebar Href="/"
                     @ref="sidebar"
                     ImageSrc="https://demos.blazorbootstrap.com/images/logo/logo-white.svg"
                     Title="LO Repair Queue"
                     DataProvider="SidebarDataProvider"
                     WidthUnit="Unit.Px" />
        }
    </SidebarSection> *@

    <ContentSection>
        @Body
    </ContentSection>

    <FooterSection>
        Footer links...
    </FooterSection>
</BlazorBootstrapLayout>

@code {
    private bool showSidebar = false;
    private Sidebar? sidebar;

    private IEnumerable<NavItem> navItems = default!;

    private void ToggleSidebar()
    {
        showSidebar = !showSidebar;
    }
    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
                   {
                       new NavItem { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Home", Match=NavLinkMatch.All},
                       new NavItem { Id = "2", Href = "/counter", IconName = IconName.PlusSquareFill, Text = "Counter"},
                       new NavItem { Id = "3", Href = "/weather", IconName = IconName.Table, Text = "Weather"},
                   };
        return navItems;
    }
}

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>