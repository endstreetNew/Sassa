@page "/misfilesec"

@inject IAlertService toast
@inject IDbContextFactory<ModelContext> dbContextFactory


<div class="row">
    <div class="col" style="width:200px">
        <div id="divSearchID" style="vertical-align: middle; display: table-cell; padding: 0 5px 0 5px;">
            <input class="form-control" placeholder="Enter ApplicantId here..." @bind="searchId" />
        </div>
        <div style="vertical-align: middle; display: table-cell; padding: 0 5px 0 5px;">
            <button type="button" class="btn btn-primary btn-sm form-control" @onclick="@(() => SearchMis())"><span class="oi oi-magnifying-glass" aria-hidden="true"></span></button>
        </div>
    </div>
</div>

<QuickGrid Items="@misFiles.AsQueryable()" TGridItem="EcMisTbl" Pagination="@paginationState">
    <PropertyColumn Title="ID No" Property="f => f.IdNumber" />
    <PropertyColumn Title="Name" Property="f => f.Name" />
    <PropertyColumn Title="Surname" Property="f => f.Surname" />
    <PropertyColumn Title="Grant Type" Property="f => f.GrantType" />
    <PropertyColumn Title="App Date" Property="f => f.AppDate" />
    <PropertyColumn Title="Date Change" Property="f => f.DateChange" />
    <PropertyColumn Title="File Number" Property="f => f.FileNumber" />
    <PropertyColumn Title="Region Id" Property="f => f.RegionId" />
    <PropertyColumn Title="Registry Type" Property="f => f.RegistryType" />

</QuickGrid>
<Paginator State="@paginationState" />


@code {
    protected IQueryable<EcMisTbl> misFiles = Enumerable.Empty<EcMisTbl>().AsQueryable();
    protected string searchId = "";
    PaginationState paginationState = new PaginationState { ItemsPerPage =20 };

    protected void SearchMis()
    {
        if(string.IsNullOrEmpty(searchId) || searchId.Length < 13)
        {
            toast.Error("Please enter a valid applicant id.");
            return;
        }
        misFiles = context.SsApplications.Where(x => x.IdNumber == searchId).Select(r => new EcMisTbl()
        {
                IdNumber = r.IdNumber,
                Name = r.Name,
                Surname = r.Surname,
                GrantType = r.GrantType,
                AppDate = r.ActionDate,
                FileNumber = r.FormType + r.FormNumber,
                RegionId = "2",
                RegistryType = r.BoxType

        });
    }
    private ModelContext context = default!;

    protected override void OnInitialized()
    {
        context = dbContextFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}