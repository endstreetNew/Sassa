
@inject BRMDbService db
@inject StaticService sservice
@inject IAlertService toast

<Modal Heading="File Request" Cancel="OnModalCancel" Ok="OnModalOk">
    @if (fr != null)
    {
        <EditForm Model="@fr">
            <div class="input-group mb-1">
                <span class="input-group-text">Request Category</span>
                <select class="form-select" @bind="@fr.Category">
                    @*<option value="" selected>select...</option>*@
                    @foreach (var grant in StaticDataService.RequestCategories)
                    {
                        <option value=@grant.CategoryId>@grant.CategoryDescr</option>
                    }
                </select>
            </div>
            <div class="input-group mb-1">
                <span class="input-group-text">Stakeholder</span>
                <text class="form-control">@(StaticDataService.StakeHolders.Where(f => f.DepartmentId == fr.Category).FirstOrDefault() == null ? "" : StaticDataService.StakeHolders.Where(f => f.DepartmentId == fr.Category).FirstOrDefault()!.Name)</text>
            </div>
            <div class="input-group mb-1">
                <span class="input-group-text">Request Reason</span>
                <select class="form-select" @bind="@fr.CategoryType">
                    <option value="" selected>select...</option>
                    @foreach (var item in sservice.GetRequestCategoryTypes(fr.CategoryString))
                    {
                        <option value=@item.Key>@item.Value</option>
                    }
                </select>
            </div>
            <div class="input-group mb-1">
                <span class="input-group-text">Grant type</span>
                <select class="form-select" @bind="@fr.GrantType">
                    @*<option value="" selected>All</option>*@
                    @foreach (var grant in grantTypes)
                    {

                        <option value=@grant.Key>@grant.Value</option>
                    }
                </select>
            </div>
            <div class="input-group mb-1">
                <span class="input-group-text">Detail</span>
                <textarea class="form-control" @bind="@fr.Description"></textarea>
            </div>

        </EditForm>
    }
</Modal>


@code {

    [Parameter]
    public EventCallback CloseModal { get; set; }
    [Parameter]
    public string IdNo { get; set; } = "";
    [Parameter]
    public Dictionary<string, string> grantTypes { get; set; } = new();

    protected RequestModel fr = new();

    protected override void OnInitialized()
    {
        fr.IdNo = IdNo;
    }
    protected async Task OnModalOk()
    {
        try
        {
            Validate();
            fr.StakeHolder = StaticDataService.StakeHolders.Where(s => s.DepartmentId == fr.Category).First().StakeholderId;
            await db.AddFileRequest(fr);
            toast.Success("Request processed");
            OnModalCancel();
        }
        catch (Exception ex)
        {
            toast.Error(ex.Message);
        }
    }

    protected void OnModalCancel()
    {
        CloseModal.InvokeAsync();
    }

    private void Validate()
    {
        if (fr.Category == 0 || fr.CategoryType==0 )//|| string.IsNullOrEmpty(fr.Description))
        {
            throw new Exception("Please complete required fields.");
        }
    }

}
