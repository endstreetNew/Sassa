@page "/check"
@using Sassa.Brm.Health
@inject DailyCheck check
@inject SessionService session
@inject IAlertService toast
@inject TdwBatchService batchService
@inject IHttpClientFactory _httpClientFactory


<button class="btn btn-primary btn-sm active" @onclick="() => SaveReport()">Save Health check</button>
<button class="btn btn-primary btn-sm active" @onclick="() => TdwEmailTest()">Tdw Email Test</button>
<div class="status-widget">
    @if (isBrmApiHealthy)
    {
        <div class="alert alert-success">
            <span class="checkmark">✔</span> Brm Api Online
        </div>
    }
    else
    {
        <div class="alert alert-error">
            <span class="crossmark">✖</span> Brm Api Offline
        </div>
    }
</div>

<hr />
<ErrorLog/>

@* @((MarkupString)check.GenerateHealthCheckReport(session.session.Name, 10, DateTime.Now))
 *@
    @code {
        [Inject] IWebHostEnvironment? Env { get; set; }

        private bool isBrmApiHealthy = true; // Replace with actual health check logic

        protected override async Task OnInitializedAsync()
        {
            try
            {
                // Example health check logic, replace with actual API call
                var client = _httpClientFactory.CreateClient("BrmApi");
                var response = await client.GetAsync("ApplicationV2/healthcheck");
                isBrmApiHealthy = response.IsSuccessStatusCode;
            }
            catch
            {
                isBrmApiHealthy = false;
            }
        }

    public async Task SaveReport()
    {
        try
        {
            await check.WriteDailyReport(session.session.Name, 10, DateTime.Now);
            toast.Success("Healthcheck saved.");
        }
        catch
        {
            toast.Error("Healthcheck already saved.");
        }
    }

    public void TdwEmailTest()
    {
        try
        {
            if (Env == null)
            {
                toast.Error("Environment not set.");
                return;
            }
            batchService.SendTdwMailTest(Path.Combine(Env.WebRootPath, "TestFile.csv"));
            toast.Success("TestMail sent please check the log for any error.");
        }
        catch
        {
            toast.Error("Error consumed in Email client...");
        }
    }

}
