@inject BRMDbService db
@inject StaticService sservice
@inject ProgressService og
@inject ReportDataService rs
@inject Helper helper
@inject SessionService sessionService
@inject IToastService toast



<br/>
@if (!IsDashboardLoaded)
{
    <WidgetTitle title="Filter Options"/>
    <FluentStack Orientation="Orientation.Horizontal">
        <FluentSelect TOption="KeyValuePair<string,ReportPeriod>" Items="StaticDataService.QuarterList().ToList()" @bind-Value="@fromQuarter" OptionValue="@(p => p.Key)"
                      OptionText="@(p => p.Key)" Placeholder="From Quarter" />
        <FluentSelect TOption="KeyValuePair<string,ReportPeriod>" Items="StaticDataService.QuarterList().ToList()" @bind-Value="@toQuarter" OptionValue="@(p => p.Key)"
                      OptionText="@(p => p.Key)" Placeholder="To Quarter" />
        <FluentSelect TOption="KeyValuePair<string,string>" Items="@sservice.GetRegions().ToList()" Placeholder="Region" OptionValue="@(p => p.Key)"
                      OptionText="@(p => p.Value)" @bind-Value="@office.RegionId" />
        <FluentButton Appearance="Appearance.Accent" OnClick="@(async () => await btnLoadProgress_Click())">Load </FluentButton>
    </FluentStack>
    
}
else
{
    <WidgetTitle title="@($"Progress for Region : {sservice.GetRegion(office.RegionId)} Period : {fromQuarter} to {toQuarter}")" />
    <FluentDataGrid Items="dashboardData.AsQueryable()" TGridItem="MissingFile" >
        <PropertyColumn Property="@(p => p.Quarter.FinancialQuarter)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Missing)" Sortable="true" Title="Grant Type" />
        <PropertyColumn Property="@(p => p.NewGrants)" Sortable="true" />
        <PropertyColumn Property="@(p => p.OnlineGrants)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Captured)" Sortable="true" />
        <PropertyColumn Property="@(p => p.PercentCaptured)" Title="% Captured" Sortable="true" />
        <PropertyColumn Property="@(p => p.PercentMissing)" Title="% Missing(new)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Remaining)"  />
        <PropertyColumn Property="@(p => p.Scanned)" Sortable="true" />
        <PropertyColumn Property="@(p => p.CsLoaded)" Title="ContentServer"  Sortable="true" />
        <PropertyColumn Property="@(p => p.TdwSent)" Title="TDW" />
         <TemplateColumn>
            <FluentButton Appearance="Appearance.Accent" IconEnd="@(new Icons.Regular.Size12.Eye())" Title="Save Missing files" OnClick="@(() => btnSaveReport(context.Quarter.FinancialQuarter))"></FluentButton>
        </TemplateColumn>
    </FluentDataGrid>

    <FluentButton Appearance="Appearance.Accent" OnClick="btnResetProgress_Click">Close</FluentButton>
            
}


@code {

    protected UserOffice office = new();
    protected string fromQuarter = "";
    protected string toQuarter ="";
    protected List<MissingFile> dashboardData = new();
    protected bool IsDashboardLoaded = false;

    ReportPeriod period = new ReportPeriod { FromDate = DateTime.Now.AddMonths(-1), ToDate = DateTime.Now };
    protected override void OnInitialized()
    {
        fromQuarter = period.QuarterName;
        toQuarter = period.QuarterName;
    }

    protected async Task btnLoadProgress_Click()
    {

        await Task.Delay(100);
        if(string.IsNullOrEmpty(fromQuarter) || string.IsNullOrEmpty(toQuarter) || string.IsNullOrEmpty(office.RegionId))
        {
            toast.ShowInfo($"Please select report Filter.");
            return;
        }
        toast.ShowInfo($"Progress Dashboard loading...");
        dashboardData = await og.MissingProgress(StaticDataService.QuarterList()[fromQuarter], StaticDataService.QuarterList()[toQuarter],office.RegionId);
        IsDashboardLoaded = true;
    }

    protected async Task btnSaveReport(string quarterName)
    {
        try
        {
            await Task.Delay(100);

            period.FromDate = StaticDataService.QuarterList()[quarterName].FromDate;
            period.ToDate = StaticDataService.QuarterList()[quarterName].ToDate;
            toast.ShowInfo($"{rs.reportList.Where(r => r.ReportIndex == "3").First().ReportName} queued.");
            string FileName = helper.GetFileName(rs.reportList.Where(r => r.ReportIndex == "3").First().ReportName.Replace(" ", "_"),sessionService.session);
            await rs.SaveCsvReport(period.FromDate.ToString("dd/MM/yyyy"), period.ToDate.ToString("dd/MM/yyyy"), "3", office.OfficeId, "RMC", office.RegionId, "", FileName);
        }
        catch (Exception ex)
        {
            toast.ShowError(ex.Message);
        }
    }
    
    protected void btnResetProgress_Click()
    {
        IsDashboardLoaded = false;
    }

}
