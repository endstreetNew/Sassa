@inject BRMDbService db

<FluentDataGrid Items="@items.AsQueryable()" TGridItem="DcFileDeleted" Pagination="@pagination">
    <PropertyColumn Width="100px" Property="@(p => p.UnqFileNo)" Sortable="true" />
    <PropertyColumn Width="130px" Property="@(p => p.BrmBarcode)" Sortable="true" />
    <PropertyColumn Width="200px" Property="@(p => p.UpdatedByAd)" Sortable="true" />
    <PropertyColumn Width="130px" Property="@(p => p.ApplicantNo)" Sortable="true" />
    <PropertyColumn Width="100px" Property="@(p => p.UserFirstname + p.UserLastname)" Sortable="true" />
    <PropertyColumn Width="200px" Property="@(p => p.GrantType)" />
    <PropertyColumn Width="100px" Property="@(p => p.ApplicationStatus)" Sortable="true" />
    <PropertyColumn Width="100px" Property="@(p => p.TransDate == null ? "" : ((DateTime)p.TransDate).ToShortDateString())" Sortable="true" />
</FluentDataGrid>
<FluentPaginator State="@pagination" />

@if(!items.Any())
{
        <p>No data. </p>
}

@code {
    [Parameter]
    public string IdNumber { get; set; } = "";

    public List<DcFileDeleted> items { get; set; } = new();
    PaginationState pagination = new PaginationState { ItemsPerPage = 15 };

    protected override async Task OnInitializedAsync()
    {
        if(!string.IsNullOrEmpty(IdNumber))items = await db.GetDeleteHistory(IdNumber);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(IdNumber)) items = await db.GetDeleteHistory(IdNumber);
    }
}