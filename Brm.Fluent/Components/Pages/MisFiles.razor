@page "/misfiles"

@inject MisFileService db
@inject IToastService toast

<BrmPageTitle Title="MIS file search" Loading ="loading"/>
<FluentStack>
<FluentTextField @bind-Value="@searchId" Placeholder="Enter Id/Filenumber..." />
<FluentButton Appearance="Appearance.Accent" IconEnd="@(new Icons.Regular.Size16.Search())" Title="Search" OnClick="@(async () => await SearchMis())"></FluentButton>
</FluentStack>

<FluentDataGrid Items="@misFiles.AsQueryable()" TGridItem="MisLivelinkTbl">
    <PropertyColumn Width="130px" Property="@(p => p.IdNumber)" />
    <PropertyColumn Width="100px" Property="@(p => p.Name)" Sortable="true" />
    <PropertyColumn Width="130px" Property="@(p => p.Surname)" Sortable="true" />
    <PropertyColumn Width="200px" Property="@(p => p.GrantType)" Sortable="true" />
    <PropertyColumn Width="130px" Property="@(p => p.AppDate)" Sortable="true" />
    <PropertyColumn Width="100px" Property="@(p => p.DateChange)" Sortable="true" />
    <PropertyColumn Width="200px" Property="@(p => p.FileNumber)" />
    <PropertyColumn Width="100px" Property="@(p => p.AppDate)" Sortable="true" />
    <PropertyColumn Width="100px" Property="@(p => p.RegionId)" Sortable="true" />
    <PropertyColumn Width="100px" Property="@(p => p.RegistryType)" Sortable="true" />
</FluentDataGrid>

@code {

    protected List<MisLivelinkTbl> misFiles = new();
    protected string searchId = "";

    protected bool loading;

    protected async Task SearchMis()
    {
        if(string.IsNullOrEmpty(searchId) || searchId.Length < 13)
        {
            toast.ShowError("Please enter a valid applicant id.");
            return;
        }
        loading = true;
        misFiles = await db.GetMisFiles(searchId);
        loading = false;
    }
}