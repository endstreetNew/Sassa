@inherits LayoutComponentBase
@inject NavigationManager navigation
@inject SessionService sessionservice
@inject StaticService staticservice
@inject ActiveUser _ConnectedUser
@inject ActiveUserList _ConnectedUserList

@implements IDisposable

<FluentLayout>
    <FluentHeader Style="background: linear-gradient(90deg, rgba(251,252,253,1) 0%, rgba(252,247,213,0.7592422385620915) 21%, rgba(255,228,0,1) 100%);">
        <img src="images/sassa_logoSmall.jpg" />
        <p class="site-title">
            Beneficiary Records Management
        </p>
          <FluentSpacer />
        <p><LoginDisplay UserCount="@_ConnectedUserList.Users.Count()" /></p>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <FluentToastProvider Position="ToastPosition.TopCenter" />
            <FluentDialogProvider />
            <AuthorizeView>
            <div class="content">
                @Body
            </div>
            </AuthorizeView>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <a href="#" target="_blank">Documentation</a>
        <FluentSpacer />
        <p>Brm Version xx</p>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code
{
    protected string Status = "Initializing session..";
    public OfficeColor officeColor { get; set; }
    protected override async Task OnInitializedAsync()
    {
        officeColor = (navigation.BaseUri.ToLower().Contains("ssvsbrmdrshc02") || navigation.BaseUri.ToLower().Contains("ssvsqabrshc02")) ? OfficeColor.Office : OfficeColor.Sway;
        StateHasChanged();
        while (!staticservice.IsInitialized) { }
        try
        {
            if (sessionservice.session.IsBrmUser())
            {
                //sessionservice.session.Office = await staticservice.GetUserLocalOffice(sessionservice.session.SamName, sessionservice.session.IsInRole("GRP_BRM_Supervisors") ? "Y" : "N");
                Status = "";
                _ConnectedUser = new ActiveUser() { Name = sessionservice.session.SamName! };
                if (!_ConnectedUserList.Users.Contains(_ConnectedUser))
                {
                    _ConnectedUserList.Users.Add(_ConnectedUser);
                }
            }
            else
            {
                Status = "No Brm Roles for this user;";
            }
        }
        catch (Exception ex)
        {
            Status = ex.Message;
        }
        await Task.CompletedTask;
    }

    // remove `ConnectedUser` from
    // `ConnectedUserList` on dispose.
    public void Dispose()
    {
        _ConnectedUserList.Users.Remove(_ConnectedUser);
    }
}